@page
@model MyFinancesAdminWebApp.Pages.Banks.IndexModel

<link rel="stylesheet" href="css/style.css">
<link rel="stylesheet" href="css/pages.css">

<div style="display: flex">
    <div class="p-card bank-table mp-20">
        <div class="p-card-header">
            <div class="p-card-title">
                <h3 style="display: flex">Список банков</h3>
            </div>
            <div class="p-card-toolbar">

            </div>
        </div>
        <div class="p-card-body">
            <div class="p-table-responsive">
                @(Html.DevExtreme().DataGrid<MyFinancesAdminWebApp.Models.Bank>()
                    .ShowBorders(false)
                    .Paging(paging => paging.PageSize(5))
                    .Pager(pager =>
                    {
                        pager.Visible(true);
                        pager.DisplayMode(GridPagerDisplayMode.Full);
                        pager.ShowPageSizeSelector(false);
                        pager.AllowedPageSizes(new JS("[5, 10]"));
                        pager.ShowInfo(false);
                        pager.ShowNavigationButtons(true);
                        
                    })
                    .DataSource(ds => ds.Mvc()
                        .Controller("Banks")
                        .LoadAction("Get")
                        .InsertAction("Post")
                        .UpdateAction("Put")
                        .DeleteAction("Delete")
                        .Key("BankId")
                    )
                    .RemoteOperations(true)
                    .Columns(columns =>
                    {
                        columns.AddFor(m => m.BankId)
                            .Width(75).Alignment(HorizontalAlignment.Center);
                        columns.AddFor(m => m.Name)
                            .Width(200);
                        columns.AddFor(m => m.Colour)
                            .Width(100)
                            .CellTemplate(@<text>
                                              <div style="display: flex">
                                                  <p><%- value %></p>
                                              </div>
                                              <script>
                                                      getColor()
                                                    
                                                  </script>
                                           </text>);
                    })
                    .Editing(e => e
                        .AllowAdding(true)
                        .AllowUpdating(true)
                        .AllowDeleting(true)
                    )
                    )
            </div>
        </div>
    </div>
    
    
</div>



<script>
function getColor() {
    let table = document.getElementsByClassName('dx-datagrid-table')[1];
  
    let tableRow = table.rows.length-1;

    for (let i=0; i<tableRow; i++){
        let textColor = table.rows[i].cells[2].innerText;
        let color = `#${textColor}`;
        table.rows[i].cells[2].innerHTML = `<div style="display: flex; vertical-align: middle"><p style="margin: 0">${textColor}</p><div style="width: 20px; height: 20px; background: ${color}; vertical-align: middle; margin-left: auto; border-radius: 4px"></div></div>`;

    }
}
</script>